DOMAIN=local.cortezaproject.org:18080
# Corteza configuration

# Note: default docker image without any extra command will
# force :80 via flag and override anything you set here
HTTP_ADDR=:18080

# SMTP configuration
# For dev environment, run mailhog (`make mailhog.up`), set SMTP_HOST to `localhost:1025`
# and visit localhost:8025.
SMTP_HOST=smtp.zoho.com:465
SMTP_USER=chen@tilnet.co.il
SMTP_PASS=Yanoyano1
SMTP_FROM='"Tilnet<chen@tilnet.co.il>"'
SMTP_QUOTE_FROM=%D7%98%D7%99%D7%9C%D7%A0%D7%98%3Cchen@tilnet.co.il%3E
SMTP_DOMAIN=smtp.zoho.com
SMTP_PORT=465

# JWT Secret, shared among all services.
# If not set, random value will be set every time you reset the service
#AUTH_JWT_SECRET="PWtUb1LrjMvhDvY3N6XNmdLmkBbe9ByYJOAEwJlA4s2jUDaq"

# JWT expiration (duration, default: '720h', 30 days)
#AUTH_JWT_EXPIRY=

# Debug level you want to use (anything equal or lower than that will be logged)
# Values: debug, info, warn, error, panic, fatal
LOG_LEVEL=info

# Timeout for internal HTTP client
HTTP_CLIENT_TIMEOUT=30s

# Allow usage of insecure hosts (self-signed, expired certificates)
HTTP_CLIENT_TSL_INSECURE=true

# Log HTTP requests
#HTTP_LOG_REQUESTS=true

# Monitoring log interval
MONITOR_INTERVAL=5min

# Database to use
DB_DSN=dbuser:dbpass@tcp(172.23.0.3:3306)/dbname?collation=utf8mb4_general_ci
#DB_DSN=dbuser:dbpass@tcp(db:3306)/dbname?collation=utf8mb4_general_ci

# Log database queries?
#DB_LOGGER=false



# Enable debug logger (more verbose,
#LOG_DEBUG=false

########################################################################################################################
# Storage configuration

# Local, plain storage path:

# General all-in-one
#STORAGE_PATH=var/store (defaults to "/var/store")

# or separate path by service (Docker default values):
#COMPOSE_STORAGE_PATH=/data/compose
#SYSTEM_STORAGE_PATH=/data/system

# Min.io:
# Storage to minio backend is activated when MINIO_ENDPOINT is set
#
# If you are in development environemnt and using `make minio.up` for testing,
# your min.io instance is most likely listening on localhost
# (inspect `Makefile` for details)
#MINIO_ENDPOINT=localhost:9000

# Access & secret key
# These keys are used by Min.io Docker container as well
#MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
#MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

# Per-service buckets (default values)
#COMPOSE_MINIO_BUCKET=compose
#SYSTEM_MINIO_BUCKET=system

# Strict mode:
# When true, it does not create un-existing buckets
#MINIO_STRICT=false

#######################################################################################################################

#
# Federation - warning, this is still an experimental feature
#
FEDERATION_ENABLED=true
FEDERATION_HOST=localhost:80
FEDERATION_LABEL=Federation host 1

# Sync settings - paging and sync delay
FEDERATION_SYNC_STRUCTURE_MONITOR_INTERVAL=2m
FEDERATION_SYNC_DATA_MONITOR_INTERVAL=60s
FEDERATION_SYNC_DATA_PAGE_SIZE=100

# This needs to be one per page for architectural reasons for now
FEDERATION_SYNC_STRUCTURE_PAGE_SIZE=1

HTTP_WEBAPP_BASE_DIR=./webapp/public
HTTP_WEBAPP_ENABLED=true
HTTP_ERROR_TRACING=true
#HTTP_LOG_RESPONSE=true
#HTTP_LOG_REQUEST=true
#RBAC_LOG=true
LOG_INCLUDE_CALLER=true
LOG_STACKTRACE_LEVEL=warn
#WEBSOCKET_LOG_ENABLED=true
HTTP_CLIENT_TLS_INSECURE=true
CORREDOR_ENABLED=true
CORREDOR_ADDR=172.23.0.2:80
#CORREDOR_LOG_ENABLED=true
WORKFLOW_EXEC_DEBUG=true

LOCALE_DEVELOPMENT_MODE=true
LOCALE_PATH=./corteza-locale/src

#LOCALE_LOG=true
LOCALE_LANGUAGES="he, en"

TEMPLATE_RENDERER_GOTENBERG_ADDRESS="http://172.23.0.4:3000"
TEMPLATE_RENDERER_GOTENBERG_ENABLED=true
